{
  "tech_stack": [
    "TypeScript",
    "React",
    "Next.js (App Router & Pages Router)",
    "Tailwind CSS",
    "Bun runtime & bundler",
    "Supabase (Auth, Database, Storage)",
    "PostgreSQL (via Supabase cloud)",
    "Drizzle ORM",
    "Zod for schema validation",
    "React Hook Form & custom hooks",
    "WebSockets (ws)"
  ],
  "features": [
    {
      "name": "Inventory Management (Main & Branch)",
      "description": "Pages and components to list, filter, paginate, and modify inventory items for main warehouse and branch locations. Includes modals for item CRUD, category & brand management, and trade-in pricing.",
      "files": [
        "app/inventory/main-inventory/page.tsx",
        "app/inventory/branch-inventory/page.tsx",
        "app/inventory/hooks/useInventoryMockData.ts",
        "components/inventory/*",
        "lib/services/inventoryService.ts",
        "lib/services/branchInventoryService.ts"
      ]
    },
    {
      "name": "Point of Sale (POS)",
      "description": "Comprehensive POS workflow with cart management, checkout, trade-ins, refunds, receipt generation, and sync with inventory.",
      "files": [
        "app/pos/page.tsx",
        "app/pos/components/**/*",
        "lib/services/checkout-service.ts",
        "lib/services/refundService.ts",
        "lib/services/inventory-pos-sync.ts",
        "lib/types/**/*"
      ]
    },
    {
      "name": "Hooks & Context Providers",
      "description": "Reusable React hooks for data fetching (inventory, sales, users, etc.) and global contexts for auth, branch selection, company info, etc.",
      "files": [
        "lib/contexts/**/*.tsx",
        "lib/hooks/**/*.ts*"
      ]
    },
    {
      "name": "Supabase Integration Layer",
      "description": "Abstraction around Supabase client creation for browser and server, admin client, db schema SQL and migrations, plus Drizzle ORM setup.",
      "files": [
        "supabase/**/*",
        "lib/db/**/*"
      ]
    },
    {
      "name": "UI Components Library",
      "description": "Shared UI components such as buttons, dropdowns, tables, modals, pagination, sidebar, and toast notifications built with Tailwind and Headless UI patterns.",
      "files": [
        "components/**/*",
        "components/ui/**/*"
      ]
    },
    {
      "name": "Utils & Helpers",
      "description": "Utility functions for formatting, validation, receipt generation, environment config, etc.",
      "files": [
        "lib/utils.ts",
        "lib/utils/**/*",
        "lib/config.ts",
        "lib/utils/receipts.ts"
      ]
    },
    {
      "name": "Testing & Instrumentation",
      "description": "Scripts and utilities for validating checkout logic, database health checks, and testsprite integration.",
      "files": [
        "test-checkout-functionality.js",
        "scripts/**/*",
        "instrumentation.js"
      ]
    }
  ]
}