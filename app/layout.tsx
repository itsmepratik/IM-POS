import { Metadata } from "next"
import { Inter } from "next/font/google"
import localFont from "next/font/local"
import "react-day-picker/dist/style.css"
import "./globals.css"
import { UserProvider } from "./user-context"
import { BranchProvider } from "./branch-context"
import { NotificationProvider } from "./notification-context"
import { NotificationDemo } from "./notification-demo"

// Load General Sans Variable font with optimized settings
const generalSans = localFont({
  src: [
    {
      path: '../public/fonts/GeneralSans-Variable.ttf',
      weight: '300 700',
      style: 'normal',
    },
    {
      path: '../public/fonts/GeneralSans-VariableItalic.ttf',
      weight: '300 700',
      style: 'italic',
    }
  ],
  variable: '--font-general-sans',
  display: 'swap',        // Use 'swap' to ensure text remains visible during font loading
  preload: true,          // Preload the font
  fallback: ['system-ui', 'sans-serif'], // Fallback fonts
  adjustFontFallback: "Inter" // Automatically adjust the fallback font
})

// Keep Inter as a fallback
const inter = Inter({ 
  subsets: ["latin"], 
  variable: "--font-sans",
  display: 'swap'
})

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        <link rel="icon" href="/favicon.ico" />
        <link 
          rel="preload" 
          href="/fonts/GeneralSans-Variable.ttf" 
          as="font" 
          type="font/ttf" 
          crossOrigin="anonymous" 
        />
        <link 
          rel="preload" 
          href="/fonts/GeneralSans-VariableItalic.ttf" 
          as="font" 
          type="font/ttf" 
          crossOrigin="anonymous" 
        />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      </head>
      <body className={`${generalSans.variable} ${inter.variable} font-sans antialiased`} suppressHydrationWarning>
        <UserProvider>
          <BranchProvider>
            <NotificationProvider>
              {children}
              <NotificationDemo />
            </NotificationProvider>
          </BranchProvider>
        </UserProvider>
      </body>
    </html>
  )
}

